/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import iuran.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.sql.SQLException;
import java.util.*;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import kasir.Clerk;
import kasir.Control;
import org.apache.commons.collections4.keyvalue.DefaultMapEntry;
import org.netbeans.validation.api.Validator;
import org.netbeans.validation.api.ValidatorUtils;
import org.netbeans.validation.api.ui.swing.ValidationPanel;
import org.netbeans.validation.api.builtin.stringvalidation.StringValidators;
import org.openide.util.Exceptions;
import pelajar.Level;
import pelajar.Profil;
import sak.KasirException;

/**
 *
 * @author Master
 */
public class InputIuranPeriodicFrame extends javax.swing.JFrame {
    private Profil profil;
    private DefaultTableModel dtm;
    private Clerk clerk;
    private final ValidationPanel validationPanel = new ValidationPanel();
    private TableCellEditor tableCellEditor;
    private JTextField jTextFieldJanuari = new JTextField("Januari", 0);
    /**
     * Creates new form InputIuranPeriodicFrame
     */
    public InputIuranPeriodicFrame() {
        initComponents();
    }
    
    public InputIuranPeriodicFrame(Clerk clerk, Profil profil){
        this.profil = profil;
        this.clerk = clerk;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jPanelProfil = new javax.swing.JPanel();
        jLableProfilTitle = new javax.swing.JLabel();
        jLabelNama = new javax.swing.JLabel();
        jLabelLevel2Level3 = new javax.swing.JLabel();
        jLabelNoInduk = new javax.swing.JLabel();
        jLabelLevel1 = new javax.swing.JLabel();
        jTextFieldNama = new javax.swing.JTextField();
        jTextFieldNomorInduk = new javax.swing.JTextField();
        jTextFieldLevel2Level3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabelTahun = new javax.swing.JLabel();
        jTextFieldTahun = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextFieldBiayaIPPTetap = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLableProfilTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLableProfilTitle.setText(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jLableProfilTitle.text")); // NOI18N

        jLabelNama.setText(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jLabelNama.text")); // NOI18N

        jLabelLevel2Level3.setText(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jLabelLevel2Level3.text")); // NOI18N

        jLabelNoInduk.setText(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jLabelNoInduk.text")); // NOI18N

        jLabelLevel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelLevel1.setText(profil.currentLevel.level1.toString());

        jTextFieldNama.setText(profil.biodata.nama);
        jTextFieldNama.setFocusable(false);
        jTextFieldNama.setText(profil.biodata.nama);
        jTextFieldNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNamaActionPerformed(evt);
            }
        });

        jTextFieldNomorInduk.setText(profil.noInduk);
        jTextFieldNomorInduk.setFocusable(false);

        jTextFieldLevel2Level3.setText(profil.currentLevel.level2.toString().concat(" "+profil.currentLevel.level3.toString()));
        jTextFieldLevel2Level3.setFocusable(false);

        javax.swing.GroupLayout jPanelProfilLayout = new javax.swing.GroupLayout(jPanelProfil);
        jPanelProfil.setLayout(jPanelProfilLayout);
        jPanelProfilLayout.setHorizontalGroup(
            jPanelProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProfilLayout.createSequentialGroup()
                .addGroup(jPanelProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelProfilLayout.createSequentialGroup()
                        .addComponent(jLableProfilTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLevel1))
                    .addGroup(jPanelProfilLayout.createSequentialGroup()
                        .addGroup(jPanelProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNama)
                            .addComponent(jLabelNoInduk)
                            .addComponent(jLabelLevel2Level3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldNomorInduk, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNama, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLevel2Level3, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanelProfilLayout.setVerticalGroup(
            jPanelProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProfilLayout.createSequentialGroup()
                .addGroup(jPanelProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLableProfilTitle)
                    .addComponent(jLabelLevel1))
                .addGap(24, 24, 24)
                .addGroup(jPanelProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNama)
                    .addComponent(jTextFieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanelProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNoInduk)
                    .addComponent(jTextFieldNomorInduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLevel2Level3)
                    .addComponent(jTextFieldLevel2Level3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        dtm = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"JANUARI", null},
                {"PEBRUARI", null},
                {"MARET", null},
                {"APRIL", null},
                {"MEI", null},
                {"JUNI", null},
                {"JULI", null},
                {"AGUSTUS", null},
                {"SEPTEMBER", null},
                {"OKTOBER", null},
                {"NOPEMBER", null},
                {"DESEMBER", null}
            },
            new String [] {
                "Bulan", "Biaya IPP"
            }
        ){
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class
            };

            boolean[] canEdit = new boolean [] {
                false, true
            };
            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jTable1.setModel(dtm);
        jTable1.setCellEditor(tableCellEditor);
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabelTahun.setText(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jLabelTahun.text")); // NOI18N

        jTextFieldTahun.setText(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jTextFieldTahun.text")); // NOI18N

        jCheckBox1.setText(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jCheckBox1.text")); // NOI18N
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jTextFieldBiayaIPPTetap.setText(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jTextFieldBiayaIPPTetap.text")); // NOI18N
        jTextFieldBiayaIPPTetap.setName(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jTextFieldBiayaIPPTetap.name")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelTahun)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldTahun, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBiayaIPPTetap, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTahun)
                    .addComponent(jTextFieldTahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1)
                    .addComponent(jTextFieldBiayaIPPTetap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jButtonSave.setText(org.openide.util.NbBundle.getMessage(InputIuranPeriodicFrame.class, "InputIuranPeriodicFrame.jButtonSave.text")); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelProfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addComponent(jButtonSave)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addComponent(jPanelProfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSave)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setContentPane(validationPanel);
        validationPanel.setInnerComponent(jPanelMain);
        Validator<String> d = StringValidators.trimString(ValidatorUtils.merge(
            StringValidators.REQUIRE_VALID_NUMBER,
            StringValidators.REQUIRE_NON_NEGATIVE_NUMBER));
    validationPanel.getValidationGroup().add(jTextFieldBiayaIPPTetap, d);
    validationPanel.getValidationGroup().add(jTextFieldTahun, d);
    jButtonSave.setEnabled(false);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNamaActionPerformed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        buildTableModel(!jCheckBox1.isSelected(), Float.valueOf(jTextFieldBiayaIPPTetap.getText()));
        jTable1.setModel(dtm);
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        if(jTable1.isValid()){
            try {
                saveInsertIuran();
            } catch (SQLException ex) {
                Exceptions.printStackTrace(ex);
                JOptionPane.showMessageDialog(rootPane, ex,"Error", JOptionPane.ERROR_MESSAGE);
            } catch (KasirException ex) {
                Exceptions.printStackTrace(ex);
                JOptionPane.showMessageDialog(rootPane, ex,"Error", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Table Error","Table Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        // TODO add your handling code here:
        if(jTable1.isValid()){
            jButtonSave.setEnabled(validatePanel());
        }else{
            jButtonSave.setEnabled(false);
        }
    }//GEN-LAST:event_jTable1FocusLost

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
        System.out.println("Property changed");
        System.out.println(jTable1.getModel().getValueAt(3,1));
    }//GEN-LAST:event_jTable1PropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputIuranPeriodicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputIuranPeriodicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputIuranPeriodicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputIuranPeriodicFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new InputIuranPeriodicFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSave;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabelLevel1;
    private javax.swing.JLabel jLabelLevel2Level3;
    private javax.swing.JLabel jLabelNama;
    private javax.swing.JLabel jLabelNoInduk;
    private javax.swing.JLabel jLabelTahun;
    private javax.swing.JLabel jLableProfilTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelProfil;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldBiayaIPPTetap;
    private javax.swing.JTextField jTextFieldLevel2Level3;
    private javax.swing.JTextField jTextFieldNama;
    private javax.swing.JTextField jTextFieldNomorInduk;
    private javax.swing.JTextField jTextFieldTahun;
    // End of variables declaration//GEN-END:variables

    private void buildTableModel(final boolean editable, float biaya) {
        
        dtm = new javax.swing.table.DefaultTableModel(
    new Object [][] {
        {"JANUARI", biaya},
        {"PEBRUARI", biaya},
        {"MARET", biaya},
        {"APRIL", biaya},
        {"MEI", biaya},
        {"JUNI", biaya},
        {"JULI", biaya},
        {"AGUSTUS", biaya},
        {"SEPTEMBER", biaya},
        {"OKTOBER", biaya},
        {"NOPEMBER", biaya},
        {"DESEMBER", biaya}
    },
    new String [] {
        "Bulan", "Biaya IPP"
    }
    ){
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.Float.class
        };

        boolean[] canEdit = new boolean [] {
            false, true
        };
        @Override
        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            if(editable){
                return canEdit [columnIndex];
                
            }else{
                return false;
            }
        }
      };
        
        

    }
    
    private boolean validatePanel(){
        return !validationPanel.isFatalProblem();
    }

    private void saveInsertIuran() throws SQLException, KasirException {
        
        //Temen-temennya IPP coding disini, sama nanti insert juga
        
        ArrayList<Entry> entry = new ArrayList<>();
        for(int i = 0; i<12 ; i++){
             entry.add(new Entry(i,Float.valueOf((float)jTable1.getModel().getValueAt(i,1))));
             //ipp.entries.add(new Entry<IPPTransactionDetail>(i+1,0F, 0, null));
        }
        IPP ipp = new IPP(profil.noInduk, new Level(profil.currentLevel.level1, profil.currentLevel.level2, profil.currentLevel.level3, Integer.valueOf(jTextFieldTahun.getText())),entry);
       IuranPeriodic ip = ipp;
        
        //IPPTransactionDetail ippt = new IPPTransactionDetail(ipp, clerk, null, profil, Float.valueOf(jTextFieldBiayaIPPTetap.getText()), null, null, null, null);
        //clerk.insertTDetail(TransactionDetail.Tipe.IPPTransaction, ippt);
        Control.insertIuran(Iuran.Tipe.IPP, ipp);
    }
    private static class PositiveIntegerCellEditor extends DefaultCellEditor {

        private static final Border red = new LineBorder(Color.red);
        private static final Border black = new LineBorder(Color.black);
        private JTextField textField;

        public PositiveIntegerCellEditor(JTextField textField) {
            super(textField);
            this.textField = textField;
            this.textField.setHorizontalAlignment(JTextField.RIGHT);
        }

        @Override
        public boolean stopCellEditing() {
            try {
                int v = Integer.valueOf(textField.getText());
                if (v < 0) {
                    throw new NumberFormatException();
                }
            } catch (NumberFormatException e) {
                textField.setBorder(red);
                return false;
            }
            return super.stopCellEditing();
        }

        @Override
        public Component getTableCellEditorComponent(JTable table,
            Object value, boolean isSelected, int row, int column) {
            textField.setBorder(black);
            return super.getTableCellEditorComponent(
                table, value, isSelected, row, column);
        }
    }
}


