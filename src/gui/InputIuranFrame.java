/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import iuran.*;
import iuran.Iuran.Tipe;
import java.awt.Container;
import java.sql.SQLException;
import java.util.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableModel;
import kasir.Clerk;
import kasir.Control;
import pelajar.Profil;
import org.netbeans.validation.api.Validator;
import org.netbeans.validation.api.ValidatorUtils;
import org.netbeans.validation.api.ui.swing.ValidationPanel;
import org.netbeans.validation.api.builtin.stringvalidation.StringValidators;
import org.openide.util.Exceptions;
import pelajar.Level;
import sak.KasirException;
/**
 *
 * @author Master
 */
public class InputIuranFrame extends javax.swing.JFrame {
    private Clerk clerk;
    private Profil profil;
    private final ValidationPanel validationPanel = new ValidationPanel();
    private IPSP ipsp;
    private DefaultTableModel dtm;
    private TableCellEditor tableCellEditor;
    private ArrayList<Seragam> seragamS;
    private ArrayList<Buku> bukuS;
    private ArrayList<IDD> iddS;
    private TableModel tableModelSeragam;
    private TableModel tableModelBuku;
    private TableModel tableModelIDD;
    private Seragam seragam;
    private IDD idd;
    private Level level;
    /**
     * Creates new form InputIuranFrame
     */
    public InputIuranFrame() {
        initComponents();
    }
    
    public InputIuranFrame(Clerk clerk, Profil profil){
        this.clerk = clerk;
        this.profil = profil;
        this.level = profil.currentLevel;
//        try {
//            ipsp = Control.selectIuran(Iuran.Tipe.IPSP, Iuran.noIndukColName, false,profil.noInduk);
//        } catch (SQLException ex) {
//            ipsp = null;
//            Exceptions.printStackTrace(ex);
//        } catch (KasirException ex) {
//            ipsp = null;
//            Exceptions.printStackTrace(ex);
//        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMain = new javax.swing.JPanel();
        jPanelProfil1 = new javax.swing.JPanel();
        jLableProfilTitle1 = new javax.swing.JLabel();
        jLabelNama1 = new javax.swing.JLabel();
        jLabelLevel2Level4 = new javax.swing.JLabel();
        jLabelNoInduk1 = new javax.swing.JLabel();
        jLabelLevel2 = new javax.swing.JLabel();
        jTextFieldNama1 = new javax.swing.JTextField();
        jTextFieldNomorInduk1 = new javax.swing.JTextField();
        jTextFieldLevel2Level4 = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelIPP = new javax.swing.JPanel();
        jLabelIPPTitle = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableIPP = new javax.swing.JTable();
        jLabelTahun = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextFieldBiayaIPPTetap = new javax.swing.JTextField();
        jSpinnerTahun = new javax.swing.JSpinner();
        jSpinnerTahun1 = new javax.swing.JSpinner();
        jCheckBoxInputIPP = new javax.swing.JCheckBox();
        DefaultComboBoxModel level1ComboBoxModel = new DefaultComboBoxModel(level.level1.values());
        DefaultComboBoxModel level2ComboBoxModel = new DefaultComboBoxModel(level.level2.values());
        DefaultComboBoxModel level3ComboBoxModel = new DefaultComboBoxModel(level.level3.values());
        jPanelIPSP = new javax.swing.JPanel();
        jLabelIPSPTitle = new javax.swing.JLabel();
        jLabelAmount = new javax.swing.JLabel();
        jTextFieldIPSPAmount = new javax.swing.JTextField();
        jLabelIPSPChargedLevel = new javax.swing.JLabel();
        jComboBoxIPSPLevel1 = new javax.swing.JComboBox();
        jLabelIPSPChargedLevel2Level3 = new javax.swing.JLabel();
        jComboBoxIPSPLevel2 = new javax.swing.JComboBox();
        jComboBoxIPSPLevel3 = new javax.swing.JComboBox();
        jLabelNote = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaIPSPNote = new javax.swing.JTextArea();
        jPanelSeragam = new javax.swing.JPanel();
        jLabelSeragamTitle = new javax.swing.JLabel();
        jLabelAmount1 = new javax.swing.JLabel();
        jTextFieldSeragamAmount = new javax.swing.JTextField();
        jLabelSeragamChargedLevel = new javax.swing.JLabel();
        jComboBoxSeragamLevel1 = new javax.swing.JComboBox();
        jLabelSeragamChargedLevel2Level3 = new javax.swing.JLabel();
        jComboBoxSeragamLevel2 = new javax.swing.JComboBox();
        jComboBoxSeragamLevel3 = new javax.swing.JComboBox();
        jLabelNote1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaSeragamNote = new javax.swing.JTextArea();
        jLabelAmount2 = new javax.swing.JLabel();
        jTextFieldSeragamTransactionName = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableSeragam = new javax.swing.JTable();
        jPanelIDD = new javax.swing.JPanel();
        jLabelIDDTitle = new javax.swing.JLabel();
        jLabelAmount3 = new javax.swing.JLabel();
        jTextFieldIDDAmount = new javax.swing.JTextField();
        jLabelIDDChargedLevel = new javax.swing.JLabel();
        jComboBoxIIDDLevel = new javax.swing.JComboBox();
        jLabelIDDChargedLevel2Level = new javax.swing.JLabel();
        jComboBoxIDDLevel2 = new javax.swing.JComboBox();
        jComboBoxIDDLevel3 = new javax.swing.JComboBox();
        jLabelNote2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaIDDNote = new javax.swing.JTextArea();
        jLabelAmount4 = new javax.swing.JLabel();
        jTextFieldIDDTransactionName = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableIDD = new javax.swing.JTable();
        jPanelBuku = new javax.swing.JPanel();
        jLabelBukuTitle = new javax.swing.JLabel();
        jLabelAmount5 = new javax.swing.JLabel();
        jTextFieldBukuAmount = new javax.swing.JTextField();
        jLabelBukuChargedLevel = new javax.swing.JLabel();
        jComboBoxBukuLevel1 = new javax.swing.JComboBox();
        jLabelBukuChargedLevel2Level3 = new javax.swing.JLabel();
        jComboBoxBukuLevel2 = new javax.swing.JComboBox();
        jComboBoxBukuLevel3 = new javax.swing.JComboBox();
        jLabelNote3 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextAreaBukuNote = new javax.swing.JTextArea();
        jLabelAmount6 = new javax.swing.JLabel();
        jTextFieldBukuTransactionName = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableBuku = new javax.swing.JTable();
        jPanelButton = new javax.swing.JPanel();
        jButtonSaveAll = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("INPUT IURAN SISWA ".concat(profil.currentLevel.level1.toString()));

        tableModelSeragam = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Seragam", "Jumlah", "Catatan", "CheckBox"
            }
        );

        tableModelIDD = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "IDD", "Jumlah", "Catatan", "CheckBox"
            }
        );

        jLableProfilTitle1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLableProfilTitle1.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLableProfilTitle1.text")); // NOI18N

        jLabelNama1.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelNama1.text")); // NOI18N

        jLabelLevel2Level4.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelLevel2Level4.text")); // NOI18N

        jLabelNoInduk1.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelNoInduk1.text")); // NOI18N

        jLabelLevel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelLevel2.setText(profil.currentLevel.level1.toString());

        jTextFieldNama1.setText(profil.biodata.nama);
        jTextFieldNama1.setFocusable(false);
        jTextFieldNama1.setText(profil.biodata.nama);
        jTextFieldNama1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNama1ActionPerformed(evt);
            }
        });

        jTextFieldNomorInduk1.setText(profil.noInduk);
        jTextFieldNomorInduk1.setFocusable(false);

        jTextFieldLevel2Level4.setText(profil.currentLevel.level2.toString().concat(" "+profil.currentLevel.level3.toString()));
        jTextFieldLevel2Level4.setFocusable(false);

        javax.swing.GroupLayout jPanelProfil1Layout = new javax.swing.GroupLayout(jPanelProfil1);
        jPanelProfil1.setLayout(jPanelProfil1Layout);
        jPanelProfil1Layout.setHorizontalGroup(
            jPanelProfil1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProfil1Layout.createSequentialGroup()
                .addGroup(jPanelProfil1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelProfil1Layout.createSequentialGroup()
                        .addComponent(jLableProfilTitle1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLevel2))
                    .addGroup(jPanelProfil1Layout.createSequentialGroup()
                        .addGroup(jPanelProfil1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNama1)
                            .addComponent(jLabelNoInduk1)
                            .addComponent(jLabelLevel2Level4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelProfil1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldNomorInduk1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNama1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLevel2Level4, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanelProfil1Layout.setVerticalGroup(
            jPanelProfil1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProfil1Layout.createSequentialGroup()
                .addGroup(jPanelProfil1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLableProfilTitle1)
                    .addComponent(jLabelLevel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProfil1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNama1)
                    .addComponent(jTextFieldNama1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanelProfil1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNoInduk1)
                    .addComponent(jTextFieldNomorInduk1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProfil1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLevel2Level4)
                    .addComponent(jTextFieldLevel2Level4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTabbedPane1PropertyChange(evt);
            }
        });

        jPanelIPP.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanelIPPPropertyChange(evt);
            }
        });

        jLabelIPPTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelIPPTitle.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelIPPTitle.text")); // NOI18N

        dtm = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"JULI", 0F},
                {"AGUSTUS", 0F},
                {"SEPTEMBER", 0F},
                {"OKTOBER", 0F},
                {"NOVEMBER", 0F},
                {"DESEMBER", 0F},
                {"JANUARI", 0F},
                {"FEBRUARI", 0F},
                {"MARET", 0F},
                {"APRIL", 0F},
                {"MEI", 0F},
                {"JUNI", 0F}
            },
            new String [] {
                "Bulan", "Biaya IPP"
            }
        ){
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class
            };

            boolean[] canEdit = new boolean [] {
                false, true
            };
            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        jTableIPP.setModel(dtm);
        jTableIPP.setCellEditor(tableCellEditor);
        jTableIPP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTableIPPFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(jTableIPP);

        jLabelTahun.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelTahun.text")); // NOI18N

        jCheckBox1.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jCheckBox1.text")); // NOI18N
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jTextFieldBiayaIPPTetap.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jTextFieldBiayaIPPTetap.text")); // NOI18N
        jTextFieldBiayaIPPTetap.setName(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jTextFieldBiayaIPPTetap.name")); // NOI18N

        jSpinnerTahun.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.YEAR));
        jSpinnerTahun.setEditor(new javax.swing.JSpinner.DateEditor(jSpinnerTahun, "yyyy"));
        jSpinnerTahun.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerTahunStateChanged(evt);
            }
        });

        jSpinnerTahun1.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.YEAR));
        jSpinnerTahun1.setEditor(new javax.swing.JSpinner.DateEditor(jSpinnerTahun1, "yyyy"));
        jSpinnerTahun1.setValue(jSpinnerTahun.getNextValue());
        jSpinnerTahun1.setEnabled(false);
        jSpinnerTahun1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerTahun1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelTahun)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinnerTahun, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinnerTahun1, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBiayaIPPTetap, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTahun)
                    .addComponent(jCheckBox1)
                    .addComponent(jTextFieldBiayaIPPTetap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerTahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerTahun1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jCheckBoxInputIPP.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jCheckBoxInputIPP.text")); // NOI18N

        javax.swing.GroupLayout jPanelIPPLayout = new javax.swing.GroupLayout(jPanelIPP);
        jPanelIPP.setLayout(jPanelIPPLayout);
        jPanelIPPLayout.setHorizontalGroup(
            jPanelIPPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIPPLayout.createSequentialGroup()
                .addGroup(jPanelIPPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelIPPLayout.createSequentialGroup()
                        .addComponent(jLabelIPPTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxInputIPP))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );
        jPanelIPPLayout.setVerticalGroup(
            jPanelIPPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIPPLayout.createSequentialGroup()
                .addGroup(jPanelIPPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIPPTitle)
                    .addComponent(jCheckBoxInputIPP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jPanelIPP.TabConstraints.tabTitle"), jPanelIPP); // NOI18N

        jLabelIPSPTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelIPSPTitle.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelIPSPTitle.text")); // NOI18N

        jLabelAmount.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelAmount.text")); // NOI18N

        jTextFieldIPSPAmount.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jTextFieldIPSPAmount.text")); // NOI18N
        jTextFieldIPSPAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIPSPAmountActionPerformed(evt);
            }
        });
        jTextFieldIPSPAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldIPSPAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldIPSPAmountKeyTyped(evt);
            }
        });

        jLabelIPSPChargedLevel.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelIPSPChargedLevel.text")); // NOI18N

        jComboBoxIPSPLevel1.setModel(level1ComboBoxModel);
        jComboBoxIPSPLevel1.setSelectedItem(profil.currentLevel.level1);
        jComboBoxIPSPLevel1.setEnabled(false);

        jLabelIPSPChargedLevel2Level3.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelIPSPChargedLevel2Level3.text")); // NOI18N

        jComboBoxIPSPLevel2.setModel(level2ComboBoxModel);

        jComboBoxIPSPLevel3.setModel(level3ComboBoxModel);

        jLabelNote.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelNote.text")); // NOI18N

        jTextAreaIPSPNote.setColumns(20);
        jTextAreaIPSPNote.setRows(5);
        jScrollPane1.setViewportView(jTextAreaIPSPNote);

        javax.swing.GroupLayout jPanelIPSPLayout = new javax.swing.GroupLayout(jPanelIPSP);
        jPanelIPSP.setLayout(jPanelIPSPLayout);
        jPanelIPSPLayout.setHorizontalGroup(
            jPanelIPSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIPSPLayout.createSequentialGroup()
                .addGroup(jPanelIPSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIPSPTitle)
                    .addGroup(jPanelIPSPLayout.createSequentialGroup()
                        .addGroup(jPanelIPSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAmount)
                            .addComponent(jLabelIPSPChargedLevel)
                            .addComponent(jLabelNote))
                        .addGap(29, 29, 29)
                        .addGroup(jPanelIPSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelIPSPLayout.createSequentialGroup()
                                .addComponent(jComboBoxIPSPLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelIPSPChargedLevel2Level3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxIPSPLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxIPSPLevel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(jTextFieldIPSPAmount))))
                .addContainerGap())
        );
        jPanelIPSPLayout.setVerticalGroup(
            jPanelIPSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIPSPLayout.createSequentialGroup()
                .addComponent(jLabelIPSPTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelIPSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAmount)
                    .addComponent(jTextFieldIPSPAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelIPSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIPSPChargedLevel)
                    .addComponent(jComboBoxIPSPLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIPSPChargedLevel2Level3)
                    .addComponent(jComboBoxIPSPLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxIPSPLevel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelIPSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNote)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        if(ipsp!=null){
            jTextFieldIPSPAmount.setText(String.valueOf(ipsp.amount));
        }
        jComboBoxIPSPLevel2.setSelectedItem(profil.currentLevel.level2);
        jComboBoxIPSPLevel3.setSelectedItem(profil.currentLevel.level3);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jPanelIPSP.TabConstraints.tabTitle"), jPanelIPSP); // NOI18N

        jPanelSeragam.setPreferredSize(new java.awt.Dimension(1024, 176));

        jLabelSeragamTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelSeragamTitle.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelSeragamTitle.text")); // NOI18N

        jLabelAmount1.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelAmount1.text")); // NOI18N

        jTextFieldSeragamAmount.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jTextFieldSeragamAmount.text")); // NOI18N
        jTextFieldSeragamAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSeragamAmountActionPerformed(evt);
            }
        });
        jTextFieldSeragamAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSeragamAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSeragamAmountKeyTyped(evt);
            }
        });

        jLabelSeragamChargedLevel.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelSeragamChargedLevel.text")); // NOI18N

        jComboBoxSeragamLevel1.setModel(level1ComboBoxModel);
        jComboBoxSeragamLevel1.setSelectedItem(profil.currentLevel.level1);
        jComboBoxSeragamLevel1.setEnabled(false);

        jLabelSeragamChargedLevel2Level3.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelSeragamChargedLevel2Level3.text")); // NOI18N

        jComboBoxSeragamLevel2.setModel(level2ComboBoxModel);

        jComboBoxSeragamLevel3.setModel(level3ComboBoxModel);

        jLabelNote1.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelNote1.text")); // NOI18N

        jTextAreaSeragamNote.setColumns(20);
        jTextAreaSeragamNote.setRows(5);
        jScrollPane3.setViewportView(jTextAreaSeragamNote);

        jLabelAmount2.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelAmount2.text")); // NOI18N

        jTextFieldSeragamTransactionName.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jTextFieldSeragamTransactionName.text")); // NOI18N
        jTextFieldSeragamTransactionName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSeragamTransactionNameActionPerformed(evt);
            }
        });
        jTextFieldSeragamTransactionName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSeragamTransactionNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSeragamTransactionNameKeyTyped(evt);
            }
        });

        try{
            tableModelSeragam = buildSeragamTableModel(profil);
        }catch(Exception e){
            e.printStackTrace();
        }
        jTableSeragam.setModel(tableModelSeragam);
        jScrollPane4.setViewportView(jTableSeragam);

        javax.swing.GroupLayout jPanelSeragamLayout = new javax.swing.GroupLayout(jPanelSeragam);
        jPanelSeragam.setLayout(jPanelSeragamLayout);
        jPanelSeragamLayout.setHorizontalGroup(
            jPanelSeragamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSeragamLayout.createSequentialGroup()
                .addGroup(jPanelSeragamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSeragamLayout.createSequentialGroup()
                        .addComponent(jLabelSeragamTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelSeragamLayout.createSequentialGroup()
                        .addGroup(jPanelSeragamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAmount1)
                            .addComponent(jLabelSeragamChargedLevel)
                            .addComponent(jLabelNote1)
                            .addComponent(jLabelAmount2))
                        .addGap(29, 29, 29)
                        .addGroup(jPanelSeragamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldSeragamTransactionName)
                            .addComponent(jTextFieldSeragamAmount)
                            .addGroup(jPanelSeragamLayout.createSequentialGroup()
                                .addComponent(jComboBoxSeragamLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jLabelSeragamChargedLevel2Level3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxSeragamLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxSeragamLevel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanelSeragamLayout.setVerticalGroup(
            jPanelSeragamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSeragamLayout.createSequentialGroup()
                .addComponent(jLabelSeragamTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSeragamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAmount2)
                    .addComponent(jTextFieldSeragamTransactionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSeragamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAmount1)
                    .addComponent(jTextFieldSeragamAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSeragamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSeragamChargedLevel)
                    .addComponent(jComboBoxSeragamLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSeragamChargedLevel2Level3)
                    .addComponent(jComboBoxSeragamLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSeragamLevel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSeragamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNote1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );

        jComboBoxSeragamLevel2.setSelectedItem(profil.currentLevel.level2);
        jComboBoxSeragamLevel3.setSelectedItem(profil.currentLevel.level3);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jPanelSeragam.TabConstraints.tabTitle"), jPanelSeragam); // NOI18N

        jPanelIDD.setPreferredSize(new java.awt.Dimension(1024, 176));

        jLabelIDDTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelIDDTitle.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelIDDTitle.text")); // NOI18N

        jLabelAmount3.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelAmount3.text")); // NOI18N

        jTextFieldIDDAmount.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jTextFieldIDDAmount.text")); // NOI18N
        jTextFieldIDDAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDDAmountActionPerformed(evt);
            }
        });
        jTextFieldIDDAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldIDDAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldIDDAmountKeyTyped(evt);
            }
        });

        jLabelIDDChargedLevel.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelIDDChargedLevel.text")); // NOI18N

        jComboBoxIIDDLevel.setModel(level1ComboBoxModel);
        jComboBoxIIDDLevel.setSelectedItem(profil.currentLevel.level1);
        jComboBoxIIDDLevel.setEnabled(false);

        jLabelIDDChargedLevel2Level.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelIDDChargedLevel2Level.text")); // NOI18N

        jComboBoxIDDLevel2.setModel(level2ComboBoxModel);

        jComboBoxIDDLevel3.setModel(level3ComboBoxModel);

        jLabelNote2.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelNote2.text")); // NOI18N

        jTextAreaIDDNote.setColumns(20);
        jTextAreaIDDNote.setRows(5);
        jScrollPane5.setViewportView(jTextAreaIDDNote);

        jLabelAmount4.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelAmount4.text")); // NOI18N

        jTextFieldIDDTransactionName.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jTextFieldIDDTransactionName.text")); // NOI18N
        jTextFieldIDDTransactionName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDDTransactionNameActionPerformed(evt);
            }
        });
        jTextFieldIDDTransactionName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldIDDTransactionNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldIDDTransactionNameKeyTyped(evt);
            }
        });

        try{
            tableModelIDD = buildIDDTableModel(profil);
        }catch(Exception e){
            e.printStackTrace();
        }
        jTableIDD.setModel(tableModelIDD);
        jScrollPane6.setViewportView(jTableIDD);

        javax.swing.GroupLayout jPanelIDDLayout = new javax.swing.GroupLayout(jPanelIDD);
        jPanelIDD.setLayout(jPanelIDDLayout);
        jPanelIDDLayout.setHorizontalGroup(
            jPanelIDDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIDDLayout.createSequentialGroup()
                .addGroup(jPanelIDDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelIDDLayout.createSequentialGroup()
                        .addComponent(jLabelIDDTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelIDDLayout.createSequentialGroup()
                        .addGroup(jPanelIDDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAmount3)
                            .addComponent(jLabelIDDChargedLevel)
                            .addComponent(jLabelNote2)
                            .addComponent(jLabelAmount4))
                        .addGap(29, 29, 29)
                        .addGroup(jPanelIDDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldIDDTransactionName)
                            .addComponent(jTextFieldIDDAmount)
                            .addGroup(jPanelIDDLayout.createSequentialGroup()
                                .addComponent(jComboBoxIIDDLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jLabelIDDChargedLevel2Level)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxIDDLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxIDDLevel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanelIDDLayout.setVerticalGroup(
            jPanelIDDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIDDLayout.createSequentialGroup()
                .addComponent(jLabelIDDTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelIDDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAmount4)
                    .addComponent(jTextFieldIDDTransactionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelIDDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAmount3)
                    .addComponent(jTextFieldIDDAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelIDDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIDDChargedLevel)
                    .addComponent(jComboBoxIIDDLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIDDChargedLevel2Level)
                    .addComponent(jComboBoxIDDLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxIDDLevel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelIDDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNote2)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );

        jComboBoxSeragamLevel2.setSelectedItem(profil.currentLevel.level2);
        jComboBoxSeragamLevel3.setSelectedItem(profil.currentLevel.level3);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jPanelIDD.TabConstraints.tabTitle"), jPanelIDD); // NOI18N

        jPanelBuku.setPreferredSize(new java.awt.Dimension(1024, 176));

        jLabelBukuTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelBukuTitle.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelBukuTitle.text")); // NOI18N

        jLabelAmount5.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelAmount5.text")); // NOI18N

        jTextFieldBukuAmount.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jTextFieldBukuAmount.text")); // NOI18N
        jTextFieldBukuAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBukuAmountActionPerformed(evt);
            }
        });
        jTextFieldBukuAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBukuAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBukuAmountKeyTyped(evt);
            }
        });

        jLabelBukuChargedLevel.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelBukuChargedLevel.text")); // NOI18N

        jComboBoxBukuLevel1.setModel(level1ComboBoxModel);
        jComboBoxBukuLevel1.setSelectedItem(profil.currentLevel.level1);
        jComboBoxBukuLevel1.setEnabled(false);

        jLabelBukuChargedLevel2Level3.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelBukuChargedLevel2Level3.text")); // NOI18N

        jComboBoxBukuLevel2.setModel(level2ComboBoxModel);

        jComboBoxBukuLevel3.setModel(level3ComboBoxModel);

        jLabelNote3.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelNote3.text")); // NOI18N

        jTextAreaBukuNote.setColumns(20);
        jTextAreaBukuNote.setRows(5);
        jScrollPane7.setViewportView(jTextAreaBukuNote);

        jLabelAmount6.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jLabelAmount6.text")); // NOI18N

        jTextFieldBukuTransactionName.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jTextFieldBukuTransactionName.text")); // NOI18N
        jTextFieldBukuTransactionName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBukuTransactionNameActionPerformed(evt);
            }
        });
        jTextFieldBukuTransactionName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBukuTransactionNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBukuTransactionNameKeyTyped(evt);
            }
        });

        try{
            tableModelBuku = buildBukuTableModel(profil);
        }catch(Exception e){
            e.printStackTrace();
        }
        jTableBuku.setModel(tableModelBuku);
        jScrollPane8.setViewportView(jTableBuku);

        javax.swing.GroupLayout jPanelBukuLayout = new javax.swing.GroupLayout(jPanelBuku);
        jPanelBuku.setLayout(jPanelBukuLayout);
        jPanelBukuLayout.setHorizontalGroup(
            jPanelBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBukuLayout.createSequentialGroup()
                .addGroup(jPanelBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBukuLayout.createSequentialGroup()
                        .addComponent(jLabelBukuTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelBukuLayout.createSequentialGroup()
                        .addGroup(jPanelBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAmount5)
                            .addComponent(jLabelBukuChargedLevel)
                            .addComponent(jLabelNote3)
                            .addComponent(jLabelAmount6))
                        .addGap(29, 29, 29)
                        .addGroup(jPanelBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldBukuTransactionName)
                            .addComponent(jTextFieldBukuAmount)
                            .addGroup(jPanelBukuLayout.createSequentialGroup()
                                .addComponent(jComboBoxBukuLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jLabelBukuChargedLevel2Level3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxBukuLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxBukuLevel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanelBukuLayout.setVerticalGroup(
            jPanelBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBukuLayout.createSequentialGroup()
                .addComponent(jLabelBukuTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAmount6)
                    .addComponent(jTextFieldBukuTransactionName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAmount5)
                    .addComponent(jTextFieldBukuAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBukuChargedLevel)
                    .addComponent(jComboBoxBukuLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBukuChargedLevel2Level3)
                    .addComponent(jComboBoxBukuLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxBukuLevel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNote3)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );

        jComboBoxSeragamLevel2.setSelectedItem(profil.currentLevel.level2);
        jComboBoxSeragamLevel3.setSelectedItem(profil.currentLevel.level3);

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jPanelBuku.TabConstraints.tabTitle"), jPanelBuku); // NOI18N

        jButtonSaveAll.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jButtonSaveAll.text")); // NOI18N
        jButtonSaveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveAllActionPerformed(evt);
            }
        });

        jButtonCancel.setText(org.openide.util.NbBundle.getMessage(InputIuranFrame.class, "InputIuranFrame.jButtonCancel.text")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelButtonLayout = new javax.swing.GroupLayout(jPanelButton);
        jPanelButton.setLayout(jPanelButtonLayout);
        jPanelButtonLayout.setHorizontalGroup(
            jPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelButtonLayout.createSequentialGroup()
                .addComponent(jButtonSaveAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelButtonLayout.setVerticalGroup(
            jPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelButtonLayout.createSequentialGroup()
                .addGroup(jPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSaveAll)
                    .addComponent(jButtonCancel))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanelProfil1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addComponent(jPanelProfil1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addGap(3, 3, 3)
                .addComponent(jPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setContentPane(validationPanel);
        validationPanel.setInnerComponent(jPanelMain);
        Validator<String> d = StringValidators.trimString(ValidatorUtils.merge(
            StringValidators.REQUIRE_NON_EMPTY_STRING,
            StringValidators.REQUIRE_VALID_NUMBER,
            StringValidators.REQUIRE_NON_NEGATIVE_NUMBER));
    //validationPanel.getValidationGroup().add(jTextFieldIPSPAmount, d);
    jButtonSaveAll.setEnabled(false);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNama1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNama1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNama1ActionPerformed

    private void jTextFieldIPSPAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIPSPAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIPSPAmountActionPerformed

    private void jTextFieldIPSPAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIPSPAmountKeyReleased
        // TODO add your handling code here:
        jButtonSaveAll.setEnabled(!validationPanel.isFatalProblem());
    }//GEN-LAST:event_jTextFieldIPSPAmountKeyReleased

    private void jTextFieldIPSPAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIPSPAmountKeyTyped
        // TODO add your handling code here:
        jButtonSaveAll.setEnabled(!validationPanel.isFatalProblem());
    }//GEN-LAST:event_jTextFieldIPSPAmountKeyTyped

    private void jButtonSaveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveAllActionPerformed
        try {
            // TODO add your handling code here:
            saveInsertIuran();
            JOptionPane.showMessageDialog(rootPane, "Input Iuran Berhasil");
            this.dispose();
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
            JOptionPane.showMessageDialog(rootPane, "Input Iuran Gagal!\r\n".concat(ex.toString()));
        } catch (KasirException ex) {
            Exceptions.printStackTrace(ex);
            JOptionPane.showMessageDialog(rootPane, "Input Iuran Gagal!\r\n".concat(ex.toString()));
        }
    }//GEN-LAST:event_jButtonSaveAllActionPerformed

    private void jTableIPPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableIPPFocusLost
        // TODO add your handling code here:
        if (jTableIPP.isValid()) {
            jButtonSaveAll.setEnabled(validatePanel());
        } else {
            jButtonSaveAll.setEnabled(false);
        }
    }//GEN-LAST:event_jTableIPPFocusLost

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        // TODO add your handling code here:

   }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        buildTableModel(!jCheckBox1.isSelected(), Float.valueOf(jTextFieldBiayaIPPTetap.getText()));
        jTableIPP.setModel(dtm);
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jTextFieldSeragamAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSeragamAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSeragamAmountActionPerformed

    private void jTextFieldSeragamAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSeragamAmountKeyReleased
        // TODO add your handling code here:
        jButtonSaveAll.setEnabled(!validationPanel.isFatalProblem());
    }//GEN-LAST:event_jTextFieldSeragamAmountKeyReleased

    private void jTextFieldSeragamAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSeragamAmountKeyTyped
        // TODO add your handling code here:
        jButtonSaveAll.setEnabled(!validationPanel.isFatalProblem());
    }//GEN-LAST:event_jTextFieldSeragamAmountKeyTyped

    private void jTextFieldSeragamTransactionNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSeragamTransactionNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSeragamTransactionNameActionPerformed

    private void jTextFieldSeragamTransactionNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSeragamTransactionNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSeragamTransactionNameKeyReleased

    private void jTextFieldSeragamTransactionNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSeragamTransactionNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSeragamTransactionNameKeyTyped

    private void jTabbedPane1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1PropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTabbedPane1PropertyChange

    private void jPanelIPPPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanelIPPPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jPanelIPPPropertyChange

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jSpinnerTahunStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerTahunStateChanged
        // TODO add your handling code here:
        jSpinnerTahun1.setValue(jSpinnerTahun.getNextValue());
    }//GEN-LAST:event_jSpinnerTahunStateChanged

    private void jSpinnerTahun1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerTahun1StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerTahun1StateChanged

    private void jTextFieldIDDAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDDAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDDAmountActionPerformed

    private void jTextFieldIDDAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDDAmountKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDDAmountKeyReleased

    private void jTextFieldIDDAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDDAmountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDDAmountKeyTyped

    private void jTextFieldIDDTransactionNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDDTransactionNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDDTransactionNameActionPerformed

    private void jTextFieldIDDTransactionNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDDTransactionNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDDTransactionNameKeyReleased

    private void jTextFieldIDDTransactionNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDDTransactionNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDDTransactionNameKeyTyped

    private void jTextFieldBukuAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBukuAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBukuAmountActionPerformed

    private void jTextFieldBukuAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBukuAmountKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBukuAmountKeyReleased

    private void jTextFieldBukuAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBukuAmountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBukuAmountKeyTyped

    private void jTextFieldBukuTransactionNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBukuTransactionNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBukuTransactionNameActionPerformed

    private void jTextFieldBukuTransactionNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBukuTransactionNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBukuTransactionNameKeyReleased

    private void jTextFieldBukuTransactionNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBukuTransactionNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBukuTransactionNameKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputIuranFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputIuranFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputIuranFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputIuranFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new InputIuranFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonSaveAll;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBoxInputIPP;
    private javax.swing.JComboBox jComboBoxBukuLevel1;
    private javax.swing.JComboBox jComboBoxBukuLevel2;
    private javax.swing.JComboBox jComboBoxBukuLevel3;
    private javax.swing.JComboBox jComboBoxIDDLevel2;
    private javax.swing.JComboBox jComboBoxIDDLevel3;
    private javax.swing.JComboBox jComboBoxIIDDLevel;
    private javax.swing.JComboBox jComboBoxIPSPLevel1;
    private javax.swing.JComboBox jComboBoxIPSPLevel2;
    private javax.swing.JComboBox jComboBoxIPSPLevel3;
    private javax.swing.JComboBox jComboBoxSeragamLevel1;
    private javax.swing.JComboBox jComboBoxSeragamLevel2;
    private javax.swing.JComboBox jComboBoxSeragamLevel3;
    private javax.swing.JLabel jLabelAmount;
    private javax.swing.JLabel jLabelAmount1;
    private javax.swing.JLabel jLabelAmount2;
    private javax.swing.JLabel jLabelAmount3;
    private javax.swing.JLabel jLabelAmount4;
    private javax.swing.JLabel jLabelAmount5;
    private javax.swing.JLabel jLabelAmount6;
    private javax.swing.JLabel jLabelBukuChargedLevel;
    private javax.swing.JLabel jLabelBukuChargedLevel2Level3;
    private javax.swing.JLabel jLabelBukuTitle;
    private javax.swing.JLabel jLabelIDDChargedLevel;
    private javax.swing.JLabel jLabelIDDChargedLevel2Level;
    private javax.swing.JLabel jLabelIDDTitle;
    private javax.swing.JLabel jLabelIPPTitle;
    private javax.swing.JLabel jLabelIPSPChargedLevel;
    private javax.swing.JLabel jLabelIPSPChargedLevel2Level3;
    private javax.swing.JLabel jLabelIPSPTitle;
    private javax.swing.JLabel jLabelLevel2;
    private javax.swing.JLabel jLabelLevel2Level4;
    private javax.swing.JLabel jLabelNama1;
    private javax.swing.JLabel jLabelNoInduk1;
    private javax.swing.JLabel jLabelNote;
    private javax.swing.JLabel jLabelNote1;
    private javax.swing.JLabel jLabelNote2;
    private javax.swing.JLabel jLabelNote3;
    private javax.swing.JLabel jLabelSeragamChargedLevel;
    private javax.swing.JLabel jLabelSeragamChargedLevel2Level3;
    private javax.swing.JLabel jLabelSeragamTitle;
    private javax.swing.JLabel jLabelTahun;
    private javax.swing.JLabel jLableProfilTitle1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBuku;
    private javax.swing.JPanel jPanelButton;
    private javax.swing.JPanel jPanelIDD;
    private javax.swing.JPanel jPanelIPP;
    private javax.swing.JPanel jPanelIPSP;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelProfil1;
    private javax.swing.JPanel jPanelSeragam;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSpinner jSpinnerTahun;
    private javax.swing.JSpinner jSpinnerTahun1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableBuku;
    private javax.swing.JTable jTableIDD;
    private javax.swing.JTable jTableIPP;
    private javax.swing.JTable jTableSeragam;
    private javax.swing.JTextArea jTextAreaBukuNote;
    private javax.swing.JTextArea jTextAreaIDDNote;
    private javax.swing.JTextArea jTextAreaIPSPNote;
    private javax.swing.JTextArea jTextAreaSeragamNote;
    private javax.swing.JTextField jTextFieldBiayaIPPTetap;
    private javax.swing.JTextField jTextFieldBukuAmount;
    private javax.swing.JTextField jTextFieldBukuTransactionName;
    private javax.swing.JTextField jTextFieldIDDAmount;
    private javax.swing.JTextField jTextFieldIDDTransactionName;
    private javax.swing.JTextField jTextFieldIPSPAmount;
    private javax.swing.JTextField jTextFieldLevel2Level4;
    private javax.swing.JTextField jTextFieldNama1;
    private javax.swing.JTextField jTextFieldNomorInduk1;
    private javax.swing.JTextField jTextFieldSeragamAmount;
    private javax.swing.JTextField jTextFieldSeragamTransactionName;
    // End of variables declaration//GEN-END:variables

    private void buildTableModel(final boolean editable, float biaya) {
        
        dtm = new javax.swing.table.DefaultTableModel(
    new Object [][] {
        {"JULI", biaya},
        {"AGUSTUS", biaya},
        {"SEPTEMBER", biaya},
        {"OKTOBER", biaya},
        {"NOPEMBER", biaya},
        {"DESEMBER", biaya},
        {"JANUARI", biaya},
        {"PEBRUARI", biaya},
        {"MARET", biaya},
        {"APRIL", biaya},
        {"MEI", biaya},
        {"JUNI", biaya}
    },
    new String [] {
        "Bulan", "Biaya IPP"
    }
    ){
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.Float.class
        };

        boolean[] canEdit = new boolean [] {
            false, true
        };
        @Override
        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            if(editable){
                return canEdit [columnIndex];
                
            }else{
                return false;
            }
        }
      };
        
        

    }
    private void saveInsertIuran() throws SQLException, KasirException {
        
        //*************** IPSP PART / Iuran Once ***************************
        if(jTextFieldIPSPAmount.getText() != null & !jTextFieldIPSPAmount.getText().equals("") && !jTextFieldIPSPAmount.getText().equals("0")){
            IPSP ipsp = new IPSP(profil.noInduk
                                    , new Level((Level.Level1)jComboBoxIPSPLevel1.getSelectedItem(), (Level.Level2)jComboBoxIPSPLevel2.getSelectedItem(), (Level.Level3)jComboBoxIPSPLevel3.getSelectedItem(), profil.tanggalMasuk.get(Calendar.YEAR))
                                    , 0.0F, null);
            //Temen-temennya IPSP coding disini, sama nanti insert juga
            checkIPSPRecordsThenInsertOrUpdate(ipsp);
            //Control.insertIuran(Iuran.Tipe.IPSP, ipsp);
        }
        
        //**************** IPP PART / Iuran Periodic **************************
        if(jCheckBoxInputIPP.isSelected()){
            ArrayList<Entry> entry = new ArrayList<>();
            for(int i = 0; i<12 ; i++){
                entry.add(new Entry(i,Float.valueOf((float)jTableIPP.getModel().getValueAt(i,1))));
                //ipp.entries.add(new Entry<IPPTransactionDetail>(i+1,0F, 0, null));
            }
            Calendar cal = Calendar.getInstance();
            cal.setTime((Date)jSpinnerTahun.getValue());
            int levelYear = cal.get(Calendar.YEAR);
            IPP ipp = new IPP(profil.noInduk, new Level(profil.currentLevel.level1, profil.currentLevel.level2, profil.currentLevel.level3, levelYear), entry);
            //Temen-temennya IPP coding disini, sama nanti insert juga
            //IPPTransactionDetail ippt = new IPPTransactionDetail(ipp, clerk, null, profil, Float.valueOf(jTextFieldBiayaIPPTetap.getText()), null, null, null, null);
            //clerk.insertTDetail(TransactionDetail.Tipe.IPPTransaction, ippt);
            checkIPPRecordsThenInsertOrUpdate(ipp);
            
        }
        //**************** Seragam PART / Iuran Regular ******************
        //Seragam
        if(!jTextFieldSeragamAmount.getText().equals("0") &&(!jTextFieldSeragamTransactionName.getText().equals("") || jTextFieldSeragamTransactionName.getText() != null )){
            Seragam seragam = new Seragam(profil.noInduk, profil.currentLevel, jTextFieldSeragamTransactionName.getText(), Float.valueOf(jTextFieldSeragamAmount.getText()), jTextAreaSeragamNote.getText());
            //Temen-temennya IPSP coding disini, sama nanti insert juga
            Control.insertIuran(Iuran.Tipe.Seragam, seragam);
        }
        
        //Buku
        if(!jTextFieldBukuAmount.getText().equals("0") &&(!jTextFieldBukuTransactionName.getText().equals("") || jTextFieldBukuTransactionName.getText() != null )){
            Buku buku = new Buku(profil.noInduk, profil.currentLevel, jTextFieldBukuTransactionName.getText(), Float.valueOf(jTextFieldBukuAmount.getText()), jTextAreaBukuNote.getText());
            //Temen-temennya IPSP coding disini, sama nanti insert juga
            Control.insertIuran(Iuran.Tipe.Buku, buku);
        }
        //IDD
        if(!jTextFieldIDDAmount.getText().equals("0") &&(!jTextFieldIDDTransactionName.getText().equals("") || jTextFieldIDDTransactionName.getText() != null )){
            IDD idd = new IDD(profil.noInduk, profil.currentLevel, jTextFieldIDDTransactionName.getText(), Float.valueOf(jTextFieldIDDAmount.getText()), jTextAreaIDDNote.getText());
            checkIDDRecordsThenInsertOrUpdate(idd);
        }
        
    }
    
    private boolean validatePanel(){
        return !validationPanel.isFatalProblem();
    }

    private void checkIPPRecordsThenInsertOrUpdate(IPP ipp) throws SQLException{
        try {
            Set<IPP> filterIPP = new HashSet<>();
            filterIPP.add(ipp);
            Map<Long,IPP> map = new HashMap<>();
            map = Control.filterSelectIurans(Iuran.Tipe.IPP, filterIPP);
             for(IPP tempIPP : map.values()){
                if(tempIPP.noInduk.equals(ipp.noInduk) && (tempIPP.chargedLevel.tahun ==ipp.chargedLevel.tahun))
                { 
                    ipp.id = tempIPP.id;
                    for(int i = 0 ; i<tempIPP.entries.size(); i++){
                        Entry e = tempIPP.entries.get(i);
                        if(e.transactDetailIDs.size() == 0){
                            e.amount = (float)jTableIPP.getModel().getValueAt(i,1);
                        }
                        ipp.entries.set(i,e);
                    }
                }   
             }
             
            Control.updateIuran(Iuran.Tipe.IPP, ipp);
        } catch (KasirException ex) {
            Exceptions.printStackTrace(ex);
            if(ex.tipe.ROW_NOT_FOUND.equals(KasirException.Tipe.ROW_NOT_FOUND)){
                try {
                    Control.insertIuran(Iuran.Tipe.IPP, ipp);
                } catch (KasirException ex1) {
                    Exceptions.printStackTrace(ex1);
                }
            }
        }
    }
    
    private TableModel buildSeragamTableModel(Profil profil) throws SQLException, KasirException{
       String columnNames[] = {"Transaksi Seragam", "Biaya", "Catatan", "Check Box"};
       Set<Seragam> seragamFilters = new HashSet<>();
       seragamFilters.add(new Seragam(profil.noInduk,null, null, 0F, null));
       Map<Long,Seragam> searchResultMap = new HashMap<>();
       searchResultMap = Control.exactFilterSelectIurans(Iuran.Tipe.Seragam, seragamFilters);
       Object[][] data = new Object[searchResultMap.size()][5];
       
       int i = 0;
       seragamS = new ArrayList<>();       
       if(searchResultMap.size() > 0){
        for(Map.Entry<Long, Seragam> entry: searchResultMap.entrySet()){
            data[i][0]= entry.getValue().transactName;
            data[i][1]= entry.getValue().amount;
            data[i][2]= entry.getValue().note;
            if(entry.getValue().transactDetailIDs.size()>0){
                data[i][3] = new Boolean(true);
            }else{
                data[i][3] = new Boolean(false);
            }
            //if(jTableSeragam != null){data[i][3]= jTableSeragam.getValueAt(i,3);}else{data[i][3]= new Boolean(false);}
            seragamS.add(entry.getValue());
            i++;
        }
       }
       if(data.length >0){
       TableModel tm = new DefaultTableModel(data, columnNames){
           @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false for editable
               return false;
            }
            public Class getColumnClass(int c) {
                return getValueAt(0, c).getClass();
            }
       };
       
       return tm;
       }else{
           TableModel tm = new DefaultTableModel(columnNames, 4);
           return tm;
       }
   }
    
    private TableModel buildBukuTableModel(Profil profil) throws SQLException, KasirException{
       String columnNames[] = {"Transaksi Buku", "Biaya", "Catatan", "Check Box"};
       Set<Buku> bukuFilters = new HashSet<>();
       bukuFilters.add(new Buku(profil.noInduk,null, null, 0F, null));
       Map<Long,Buku> searchResultMap = new HashMap<>();
       searchResultMap = Control.exactFilterSelectIurans(Iuran.Tipe.Buku, bukuFilters);
       Object[][] data = new Object[searchResultMap.size()][5];
       
       int i = 0;
       bukuS = new ArrayList<>();       
       if(searchResultMap.size() > 0){
        for(Map.Entry<Long, Buku> entry: searchResultMap.entrySet()){
            data[i][0]= entry.getValue().transactName;
            data[i][1]= entry.getValue().amount;
            data[i][2]= entry.getValue().note;
            if(entry.getValue().transactDetailIDs.size()>0){
                data[i][3] = new Boolean(true);
            }else{
                data[i][3] = new Boolean(false);
            }
            //if(jTableBuku != null){data[i][3]= jTableBuku.getValueAt(i,3);}else{data[i][3]= new Boolean(false);}
            bukuS.add(entry.getValue());
            i++;
        }
       }
       if(data.length >0){
       TableModel tm = new DefaultTableModel(data, columnNames){
           @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false for editable
               return false;
            }
            public Class getColumnClass(int c) {
                return getValueAt(0, c).getClass();
            }
       };
       
       return tm;
       }else{
           TableModel tm = new DefaultTableModel(columnNames, 4);
           return tm;
       }
   }
    
    private TableModel buildIDDTableModel(Profil profil) throws SQLException, KasirException{
       String columnNames[] = {"Transaksi IDD", "Biaya", "Catatan", "Check Box"};
       Set<IDD> iddFilters = new HashSet<>();
       iddFilters.add(new IDD(profil.noInduk,null, null, 0F, null));
       Map<Long,IDD> searchResultMap = new HashMap<>();
       searchResultMap = Control.exactFilterSelectIurans(Iuran.Tipe.IDD, iddFilters);
       Object[][] data = new Object[searchResultMap.size()][5];
       
       int i = 0;
       iddS = new ArrayList<>();       
       if(searchResultMap.size() > 0){
        for(Map.Entry<Long, IDD> entry: searchResultMap.entrySet()){
            data[i][0]= entry.getValue().transactName;
            data[i][1]= entry.getValue().amount;
            data[i][2]= entry.getValue().note;
            if(entry.getValue().transactDetailIDs.size()>0){
                data[i][3] = new Boolean(true);
            }else{
                data[i][3] = new Boolean(false);
            }
            //if(jTableIDD != null){data[i][3]= jTableIDD.getValueAt(i,3);}else{data[i][3]= new Boolean(false);}
            iddS.add(entry.getValue());
            i++;
        }
       }
       if(data.length >0){
       TableModel tm = new DefaultTableModel(data, columnNames){
           @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false for editable
               return false;
            }
            public Class getColumnClass(int c) {
                return getValueAt(0, c).getClass();
            }
       };
       
       return tm;
       }else{
           TableModel tm = new DefaultTableModel(columnNames, 4);
           return tm;
       }
   }

    private void checkIPSPRecordsThenInsertOrUpdate(IPSP ipsp) throws SQLException{
        try {
            //Only UPDATE Amount and NOte for IPSP
            Set<IPSP> filterIPSP = new HashSet<>();
            filterIPSP.add(ipsp);
            Map<Long,IPSP> map = new HashMap<>();
            map = Control.filterSelectIurans(Iuran.Tipe.IPSP, filterIPSP);
             for(IPSP tempIPSP : map.values()){
                if(tempIPSP.noInduk.equals(ipsp.noInduk) && (tempIPSP.chargedLevel.tahun ==ipsp.chargedLevel.tahun))
                { 
                    ipsp.id = tempIPSP.id;
                    ipsp.totalInstallment = tempIPSP.totalInstallment;
                    ipsp.settledDate = tempIPSP.settledDate;
                    if(tempIPSP.note != null)
                    ipsp.note = tempIPSP.note.concat(" Biaya IPSP Sebelumnya:").concat(String.valueOf(tempIPSP.amount));
                    else
                        ipsp.note = "IPSP";
                    ipsp.amount = Float.valueOf(jTextFieldIPSPAmount.getText());
                    ipsp.note = jTextAreaIPSPNote.getText().concat("<--").concat(ipsp.note);
                }
             }
             
             
            Control.updateIuran(Iuran.Tipe.IPSP, ipsp);
        } catch (KasirException ex) {
            Exceptions.printStackTrace(ex);
            //INSERT New Amount and NOte for IPSP
            if(ex.tipe.ROW_NOT_FOUND.equals(KasirException.Tipe.ROW_NOT_FOUND)){
                try {
                    ipsp.amount = Float.valueOf(jTextFieldIPSPAmount.getText());
                    ipsp.note = jTextAreaIPSPNote.getText();
                    Control.insertIuran(Iuran.Tipe.IPSP, ipsp);
                } catch (KasirException ex1) {
                    Exceptions.printStackTrace(ex1);
                }
            }
        }
    }
    
    private void checkIDDRecordsThenInsertOrUpdate(IDD idd) throws SQLException{
        try {
            //Only UPDATE Amount and NOte for IDD
            Set<IDD> filterIDD = new HashSet<>();
            IDD temp = new IDD(idd.noInduk, idd.chargedLevel, null, 0.0f, null);
            
            filterIDD.add(temp);
            Map<Long,IDD> map = new HashMap<>();
            map = Control.filterSelectIurans(Iuran.Tipe.IDD, filterIDD);
             for(IDD tempIDD : map.values()){
                if(tempIDD.noInduk.equals(idd.noInduk) && (tempIDD.chargedLevel.tahun ==idd.chargedLevel.tahun))
                { 
                    idd.id = tempIDD.id;
                    idd.note = tempIDD.note.concat(" Biaya IDD Sebelumnya:").concat(String.valueOf(tempIDD.amount));
                    idd.amount = tempIDD.amount + Float.valueOf(jTextFieldIDDAmount.getText());
                    idd.note = jTextAreaIDDNote.getText().concat("<--").concat(idd.note);
                }
             }
             
             
            Control.updateIuran(Iuran.Tipe.IDD, idd);
        } catch (KasirException ex) {
            Exceptions.printStackTrace(ex);
            //INSERT New Amount and NOte for IDD
            if(ex.tipe.ROW_NOT_FOUND.equals(KasirException.Tipe.ROW_NOT_FOUND)){
                try {
                    idd.amount = Float.valueOf(jTextFieldIDDAmount.getText());
                    idd.note = jTextAreaIDDNote.getText();
                    Control.insertIuran(Iuran.Tipe.IDD, idd);
                } catch (KasirException ex1) {
                    Exceptions.printStackTrace(ex1);
                }
            }
        }
    }
}
